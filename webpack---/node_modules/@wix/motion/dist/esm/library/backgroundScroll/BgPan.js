import { measureCompHeight } from './utils';
export default function create(options, dom) {
  const measures = {
    compHeight: 0
  };
  if (dom) {
    measureCompHeight(measures, dom);
  }
  const {
    direction = 'left',
    speed = 0.2
  } = options.namedEffect;
  const offsetPercentage = 50 * speed / (1 + speed) | 0;
  let fromValue = `${offsetPercentage}%`;
  let toValue = `-${offsetPercentage}%`;
  if (direction === 'right') {
    [fromValue, toValue] = [toValue, fromValue];
  }
  return [{
    ...options,
    part: 'BG_MEDIA',
    startOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    endOffset: {
      name: 'cover',
      offset: {
        type: 'percentage',
        value: 0
      }
    },
    get endOffsetAdd() {
      return `calc(100vh + ${measures.compHeight}px)`;
    },
    keyframes: [{
      transform: `translateX(${fromValue})`
    }, {
      transform: `translateX(${toValue})`
    }]
  }];
}
//# sourceMappingURL=BgPan.js.map