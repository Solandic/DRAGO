import { getAdjustedDirection } from '../../utils';
export { initialFrame } from './common';
const DIRECTIONS = ['top', 'right', 'bottom', 'left'];
const POWER_TO_ROTATE_MAP = {
  soft: 45,
  medium: 90,
  hard: 270
};
function getRotateFrom(direction, rotate) {
  return {
    x: ROTATE_MAP[direction].x * rotate,
    y: ROTATE_MAP[direction].y * rotate
  };
}
const ROTATE_MAP = {
  top: {
    x: 1,
    y: 0
  },
  right: {
    x: 0,
    y: 1
  },
  bottom: {
    x: -1,
    y: 0
  },
  left: {
    x: 0,
    y: -1
  }
};
export function web(options, dom) {
  const [fadeIn, {
    custom,
    ...flipIn
  }] = style(options);
  prepare(options, dom);
  return [{
    ...fadeIn,
    keyframes: [{
      opacity: 0
    }, {
      opacity: 'var(--comp-opacity, 1)'
    }]
  }, {
    ...flipIn,
    keyframes: [{
      transform: `perspective(800px) rotate(var(--comp-rotate-z, 0deg)) rotateX(var(--motion-rotate-x , ${custom['--motion-rotate-x']})) rotateY(var(--motion-rotate-y , ${custom['--motion-rotate-y']}))`
    }, {
      transform: `perspective(800px) rotate(var(--comp-rotate-z, 0deg)) rotateX(0deg) rotateY(0deg)`
    }]
  }];
}
export function style(options) {
  const {
    direction = 'top',
    power,
    initialRotate = 90
  } = options.namedEffect;
  const rotate = power && POWER_TO_ROTATE_MAP[power] || initialRotate;
  const easing = options.easing || 'backOut';
  const from = getRotateFrom(direction, rotate);
  return [{
    ...options,
    easing: 'quadOut',
    name: 'fadeIn',
    custom: {}
  }, {
    ...options,
    easing,
    name: 'flipIn',
    custom: {
      '--motion-rotate-x': `${from.x}deg`,
      '--motion-rotate-y': `${from.y}deg`
    }
  }];
}
export function prepare(options, dom) {
  const {
    direction = 'top',
    power,
    initialRotate = 90
  } = options.namedEffect;
  const rotate = power && POWER_TO_ROTATE_MAP[power] || initialRotate;
  if (dom) {
    dom.measure(target => {
      if (!target) {
        return;
      }
      const rotation = getComputedStyle(target).getPropertyValue('--comp-rotate-z') || '0deg';
      const adjustedDirection = getAdjustedDirection(DIRECTIONS, direction, parseInt(rotation, 10));
      dom.mutate(() => {
        const from = getRotateFrom(adjustedDirection, rotate);
        target.style.setProperty('--motion-rotate-x', `${from.x}deg`);
        target.style.setProperty('--motion-rotate-y', `${from.y}deg`);
      });
    });
  }
}
//# sourceMappingURL=FlipIn.js.map