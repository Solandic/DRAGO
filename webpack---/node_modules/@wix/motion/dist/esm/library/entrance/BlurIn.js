export { initialFrame } from './common';
const BLUR_POWER_MAP = {
  soft: 6,
  medium: 25,
  hard: 50
};
export function web(options) {
  const [fadeIn, {
    custom,
    ...blurIn
  }] = style(options);
  return [{
    ...fadeIn,
    keyframes: [{
      opacity: 0
    }, {
      opacity: 'var(--comp-opacity, 1)'
    }]
  }, {
    ...blurIn,
    keyframes: [{
      filter: `blur(${custom['--motion-blur']})`
    }, {
      filter: 'blur(0px)'
    }]
  }];
}
export function style(options) {
  const {
    blur = 6,
    power
  } = options.namedEffect;
  const easing = options.easing || 'linear';
  const blurFactor = power && BLUR_POWER_MAP[power] ? BLUR_POWER_MAP[power] : blur;
  return [{
    ...options,
    name: 'fadeIn',
    duration: options.duration * 0.7,
    easing: 'sineIn',
    custom: {}
  }, {
    ...options,
    name: 'blurIn',
    easing,
    composite: 'add',
    // make sure we don't override existing filters on the component
    custom: {
      '--motion-blur': `${blurFactor}px`
    }
  }];
}
//# sourceMappingURL=BlurIn.js.map