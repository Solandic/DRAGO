export { initialFrame } from './common';
const SCALE_MAP = {
  soft: 1,
  medium: 0.6,
  hard: 0
};
const DIRECTION_MAP = {
  clockwise: -1,
  'counter-clockwise': 1
};
export function web(options) {
  const [fadeIn, {
    custom,
    ...spinIn
  }] = style(options);
  return [{
    ...fadeIn,
    keyframes: [{
      opacity: 0
    }, {
      opacity: 'var(--comp-opacity, 1)'
    }]
  }, {
    ...spinIn,
    keyframes: [{
      scale: custom['--motion-scale'],
      rotate: custom['--motion-rotate']
    }, {
      scale: '1',
      rotate: `0deg`
    }]
  }];
}
export function style(options) {
  const {
    direction = 'clockwise',
    spins = 0.5,
    initialScale = 0,
    power
  } = options.namedEffect;
  const easing = options.easing || 'cubicInOut';
  const scale = typeof power !== 'undefined' ? SCALE_MAP[power] : initialScale;
  const transformRotate = (DIRECTION_MAP[direction] > 0 ? 1 : -1) * 360 * spins;
  return [{
    ...options,
    name: 'fadeIn',
    easing: 'cubicIn',
    duration: options.duration * scale,
    custom: {}
  }, {
    ...options,
    name: 'growIn',
    easing,
    custom: {
      '--motion-scale': `${scale}`,
      '--motion-rotate': `${transformRotate}deg`
    }
  }];
}
//# sourceMappingURL=SpinIn.js.map