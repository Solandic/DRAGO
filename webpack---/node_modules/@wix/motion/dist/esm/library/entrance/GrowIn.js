import { getCssUnits } from '../../utils';
export { initialFrame } from './common';
const SCALE_MAP = {
  soft: 0.8,
  medium: 0.6,
  hard: 0
};
export function web(options) {
  const [fadeIn, {
    custom,
    ...growIn
  }] = style(options);
  return [{
    ...fadeIn,
    keyframes: [{
      opacity: 0
    }, {
      opacity: 'var(--comp-opacity, 1)'
    }]
  }, {
    ...growIn,
    keyframes: [{
      scale: custom['--motion-scale'],
      translate: custom['--motion-translate']
    }, {
      scale: '1',
      translate: '0px 0px'
    }]
  }];
}
export function style(options) {
  const {
    power,
    initialScale = 0,
    distance = {
      value: 120,
      type: 'percentage'
    },
    direction = 0
  } = options.namedEffect;
  const easing = options.easing || 'cubicInOut';
  const scale = typeof power !== 'undefined' ? SCALE_MAP[power] : initialScale;
  const angleInRad = direction * Math.PI / 180;
  const unit = getCssUnits(distance.type);
  const x = `${Math.sin(angleInRad) * distance.value | 0}${unit}`;
  const y = `${Math.cos(angleInRad) * distance.value * -1 | 0}${unit}`;
  return [{
    ...options,
    easing,
    duration: options.duration * scale,
    name: 'fadeIn',
    custom: {}
  }, {
    ...options,
    easing,
    name: 'growIn',
    custom: {
      '--motion-translate': `${x} ${y}`,
      '--motion-scale': `${scale}`
    }
  }];
}
//# sourceMappingURL=GrowIn.js.map