import _defineProperty from "@babel/runtime/helpers/defineProperty";
export class TranslationsState {
  constructor(_params) {
    _defineProperty(this, "i18n", void 0);
    _defineProperty(this, "_initPromise", void 0);
    _defineProperty(this, "getTranslateFn", async () => {
      await this._initPromise;
      return (key, params) => this.i18n.t(key, params);
    });
    this.i18n = _params.createI18n({
      asyncMessagesLoader: language => import(/* webpackChunkName: "[request]" */`../assets/locale/common-errors/common-errors_${language}.json`),
      disableAutoInit: true
    });
    this._initPromise = new Promise(async (resolve, reject) => {
      let failedLoading = false;
      const onFailedLoading = (lng, _ns, err) => {
        // reject only when fallback lang (en) fails to load
        if (lng !== 'en') {
          return;
        }
        this.i18n.off('failedLoading', onFailedLoading);
        failedLoading = true;
        reject(err);
      };
      this.i18n.on('failedLoading', onFailedLoading);
      try {
        await this.i18n.init();
        if (failedLoading) {
          return;
        }
        resolve();
      } catch (e) {
        reject(e);
      }
    });
  }
}
//# sourceMappingURL=TranslationsState.js.map